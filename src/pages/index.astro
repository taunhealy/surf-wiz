---
import Layout from '../layouts/Layout.astro';
import { getSession } from 'auth-astro/server';
import BeachContainer from '../components/BeachContainer';
import { beachData } from '../types/beaches';
import type { Beach, WindData } from '../types/beaches';

const session = await getSession(Astro.request);
const isSubscribed = session?.user?.subscription?.status === 'active';

// Get initial wind data
let windData: WindData | null = null;
try {
  const response = await fetch(new URL('/api/surf-conditions', Astro.url));
  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
  const { data } = await response.json();
  windData = data;
} catch (error) {
  console.error('Failed to fetch wind data:', error);
}
---

<Layout>
  <header class="navbar">
    <h1>Cape Town Surf Spots</h1>
    <div class="auth-buttons">
      {isSubscribed ? (
        <button
          class="subscribe-btn"
          onclick="handleUnsubscribe()"
        >
          Cancel Subscription
        </button>
      ) : (
        <button
          class="subscribe-btn"
          onclick="handleSubscribe()"
        >
          Subscribe
        </button>
      )}
      {session ? (
        <button class="auth-btn" onclick="signOut()">Sign Out</button>
      ) : (
        <button class="auth-btn" onclick="signIn('google')">Sign In</button>
      )}
    </div>
  </header>

  <BeachContainer 
    initialBeaches={beachData}
    windData={windData}
    isSubscribed={isSubscribed}
    client:load
  />

  <script>
    const { signIn, signOut } = await import("auth-astro/client");
    window.signIn = signIn;
    window.signOut = signOut;

    async function handleSubscribe() {
      try {
        const response = await fetch('/api/auth/session');
        const session = await response.json();

        if (!session?.user) {
          await signIn('google');
          return;
        }

        const checkoutResponse = await fetch('/api/create-checkout/route', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        if (!checkoutResponse.ok) {
          throw new Error('Failed to create checkout');
        }

        const { url } = await checkoutResponse.json();
        window.open(url, '_blank');
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to start checkout process. Please try again.');
      }
    }

    async function handleUnsubscribe() {
      try {
        const response = await fetch('/api/auth/session');
        const session = await response.json();

        if (!session?.user?.id) {
          alert('Please sign in first');
          return;
        }

        const unsubResponse = await fetch('/api/test-webhook/route', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            userId: session.user.id,
            action: 'unsubscribe'
          })
        });

        if (!unsubResponse.ok) {
          throw new Error('Failed to unsubscribe');
        }

        window.location.reload();
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to unsubscribe. Please try again.');
      }
    }

    window.handleSubscribe = handleSubscribe;
    window.handleUnsubscribe = handleUnsubscribe;
  </script>
</Layout>

<style>
  .navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
    background: white;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .auth-buttons {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .auth-btn {
    padding: 0.5rem 1rem;
    border-radius: 4px;
    border: none;
    background: #3498db;
    color: white;
    cursor: pointer;
    transition: background 0.2s;
  }

  .auth-btn:hover {
    background: #2980b9;
  }

  .subscription-prompt {
    text-align: center;
    padding: 2rem;
    background: rgba(52, 152, 219, 0.1);
    border-radius: 8px;
    margin-top: 2rem;
    border: 2px dashed #3498db;
  }

  .subscribe-btn {
    background: #27ae60;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
    transition: background-color 0.2s;
  }

  .subscribe-btn:hover {
    background: #219a52;
  }
</style>